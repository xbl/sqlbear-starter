name: CI

on: 
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Make dir and download jre to dist
      run: |
        sh ./build.sh
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.token }}
      with:
        tag_name: v.${{ github.sha }}
        release_name: Release
        body: |
          Changes in this Release
          - First Change
          - Second Change
        draft: false
        prerelease: false
    - name: Upload Release Asset mac
      id: upload-release-asset-mac
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: /dist/sqlbear_mac_x64.zip
        asset_name: sqlbear_mac_x64.zip
        asset_content_type: application/zip
    - name: Upload Release Asset linux
      id: upload-release-asset-linux 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: /dist/sqlbear_linux_x64.zip
        asset_name: sqlbear_linux_x64.zip
        asset_content_type: application/zip
    - name: Upload Release Asset windows
      id: upload-release-asset-windows 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: /dist/sqlbear_windows_x64.zip
        asset_name: sqlbear_windows_x64.zip
        asset_content_type: application/zip